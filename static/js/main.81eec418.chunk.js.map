{"version":3,"sources":["api/baseURL.js","components/Forms/RegisterForm.js","components/Forms/LoginForm.js","components/Styled/WeightContainer.js","components/Dashboard/Weights/Weight.js","components/Dashboard/Weights/LineChart.js","components/Styled/ProgressBar.js","components/Styled/ProgressDetails.js","components/Dashboard/Weights/Progress.js","components/Styled/FloatingActionButton.js","components/Dashboard/Weights/AddWeight.js","components/Dashboard/Weights/Weights.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","proxyUrl","RegisterForm","useState","username","setUsername","password","setPassword","goalWeight","setGoalWeight","startWeight","setStartWeight","isRegistered","setIsRegistered","handleSubmit","e","a","preventDefault","axios","post","then","res","catch","error","console","log","to","onSubmit","TextField","id","placeholder","value","onChange","target","fullWidth","type","Button","variant","color","m","LoginForm","handleToken","setUserDetails","isLoggedIn","setIsLoggedIn","data","token","styled","div","Weight","deleteWeight","editWeight","weight","weight_value","Fragment","ListItem","ListItemText","primary","secondary","moment","date","format","Divider","Chart","weights","forEach","push","width","height","margin","top","right","left","bottom","domain","dataKey","stroke","ProgressBar","props","ProgressDetails","Progress","currentWeight","userDetails","FloatingActionButtonContainer","StyledFloatingActionButton","Fab","AddWeight","addWeight","weightToAdd","setWeightToAdd","Date","setDate","headers","Authorization","size","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Weights","setCurrentWeight","setWeights","open","setOpen","classes","useEffect","get","concat","length","List","map","onClick","aria-label","Modal","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","App","setToken","tokenRecieved","basename","Container","maxWidth","path","render","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.81eec418.chunk.js","sourcesContent":["const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\nconst apiUrl = 'https://sleepy-reaches-36047.herokuapp.com/api';\r\nexport const baseUrl = proxyUrl + apiUrl;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { baseUrl } from '../../api/baseURL';\r\n\r\nexport const RegisterForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [goalWeight, setGoalWeight] = useState('');\r\n  const [startWeight, setStartWeight] = useState('');\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  const handleUsername = e => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const handlePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleStartWeight = e => {\r\n    setStartWeight(e.target.value);\r\n  };\r\n  const handleGoalWeight = e => {\r\n    setGoalWeight(e.target.value);\r\n  };\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    //Call to API register endpoint\r\n    axios\r\n      .post(baseUrl + '/users/register', {\r\n        username: username,\r\n        password: password,\r\n        goalWeight: goalWeight,\r\n        startWeight: startWeight\r\n      })\r\n      .then(function(res) {\r\n        setUsername('');\r\n        setPassword('');\r\n        setGoalWeight('');\r\n        setStartWeight('');\r\n\r\n        setIsRegistered(true);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  if (isRegistered) return <Redirect to=\"/login\" />;\r\n  else\r\n    return (\r\n      <>\r\n        <h1>Create Account</h1>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={handleUsername}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handlePassword}\r\n            fullWidth\r\n          />\r\n\r\n          <TextField\r\n            placeholder=\"Start Weight\"\r\n            value={startWeight}\r\n            onChange={handleStartWeight}\r\n            fullWidth\r\n          />\r\n\r\n          <TextField\r\n            placeholder=\"Goal Weight\"\r\n            value={goalWeight}\r\n            onChange={handleGoalWeight}\r\n            fullWidth\r\n          />\r\n\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" m={5}>\r\n            Register\r\n          </Button>\r\n\r\n          <Link to=\"/login\">Already have an account? Login here</Link>\r\n        </form>\r\n      </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { baseUrl } from '../../api/baseURL';\r\n\r\nexport const LoginForm = ({ handleToken, setUserDetails }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleUsername = e => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const handlePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(baseUrl + '/users/login', {\r\n        username: username,\r\n        password: password\r\n      })\r\n      .then(function(res) {\r\n        handleToken(res.data.token);\r\n\r\n        setUserDetails(res.data);\r\n        setUsername('');\r\n        setPassword('');\r\n\r\n        setIsLoggedIn(true);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  if (isLoggedIn) return <Redirect to=\"/weights\" />;\r\n  else\r\n    return (\r\n      <>\r\n        <h1>Login</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={handleUsername}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={handlePassword}\r\n            fullWidth\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n          <Link to=\"/register\">Need to register an account? Register here</Link>\r\n        </form>\r\n      </>\r\n    );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WeightContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../../../api/baseURL';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport moment from 'moment';\r\nimport { WeightContainer } from '../../Styled/WeightContainer';\r\n\r\nexport const Weight = ({ token, deleteWeight, editWeight, weight }) => {\r\n  const [weightValue, setWeightValue] = useState(weight.weight_value);\r\n\r\n  const handleWeightValue = e => {\r\n    setWeightValue(e.target.value);\r\n  };\r\n\r\n  const handleEdit = async id => {\r\n    axios\r\n      .put(\r\n        baseUrl + `/weights/${id}`,\r\n        {\r\n          weight: weightValue\r\n        },\r\n\r\n        {\r\n          headers: {\r\n            Authorization: 'bearer ' + token\r\n          }\r\n        }\r\n      )\r\n      .then(function(res) {\r\n        console.log(res);\r\n        editWeight(id, weightValue);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleDelete = async id => {\r\n    axios\r\n      .delete(\r\n        baseUrl + `/weights/${id}`,\r\n\r\n        {\r\n          headers: {\r\n            Authorization: 'bearer ' + token\r\n          }\r\n        }\r\n      )\r\n      .then(function(res) {\r\n        console.log(res);\r\n        deleteWeight(id);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={weight.weight_value + ' lbs'}\r\n          secondary={moment(weight.date).format('MMM Do')}\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis } from 'recharts';\r\nimport moment from 'moment';\r\n\r\nexport const Chart = ({ weights }) => {\r\n  let data = [];\r\n\r\n  weights.forEach(weight => {\r\n    const date = moment(weight.date).format('MMM Do');\r\n    data.push({ weight: weight.weight_value, date });\r\n  });\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <LineChart\r\n      width={500}\r\n      height={300}\r\n      data={data}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 5\r\n      }}\r\n    >\r\n      <YAxis type=\"number\" domain={[100, 300]} />\r\n      <XAxis dataKey=\"date\" />\r\n\r\n      <Line type=\"monotone\" dataKey=\"weight\" stroke=\"#0CCD98\" />\r\n    </LineChart>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ProgressBar = styled.div`\r\n  height: 8px;\r\n  width: ${props => (props.width ? props.width : 0)};\r\n\r\n  background: #0ccd98;\r\n  border-radius: 5px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ProgressDetails = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ProgressBar } from '../../Styled/ProgressBar';\r\nimport { ProgressDetails } from '../../Styled/ProgressDetails';\r\n\r\nexport const Progress = ({ currentWeight, userDetails }) => {\r\n  function calculatePercentageOfWeightLoss() {\r\n    let totalWeightToLose = userDetails.startWeight - userDetails.goalWeight;\r\n    let totalWeightLossSoFar = userDetails.startWeight - currentWeight;\r\n    console.log(totalWeightToLose);\r\n    console.log(totalWeightLossSoFar);\r\n    return '' + totalWeightLossSoFar / totalWeightToLose + '%';\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ProgressDetails>\r\n          <div>\r\n            <p>Start Weight:</p>\r\n            <h3>{userDetails.startWeight + ' lbs'} </h3>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Current Weight:</p>\r\n            <h2>{currentWeight + ' lbs'}</h2>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Goal Weight: </p>\r\n            <h3> {userDetails.goalWeight + ' lbs'}</h3>\r\n          </div>\r\n        </ProgressDetails>\r\n        <ProgressBar\r\n          width={\r\n            '' +\r\n            ((userDetails.startWeight - currentWeight) /\r\n              (userDetails.startWeight - userDetails.goalWeight)) *\r\n              100 +\r\n            '%'\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nexport const FloatingActionButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledFloatingActionButton = styled(Fab)`\r\n  background-color: #0ccd98;\r\n  border-radius: 35px;\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  padding: 7px 35px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport { baseUrl } from '../../../api/baseURL';\r\nimport {\r\n  FloatingActionButtonContainer,\r\n  StyledFloatingActionButton\r\n} from '../../Styled/FloatingActionButton';\r\n\r\nexport const AddWeight = ({ token, addWeight }) => {\r\n  const [weightToAdd, setWeightToAdd] = useState(0);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const handleWeightToAdd = e => {\r\n    setWeightToAdd(e.target.value);\r\n  };\r\n\r\n  const onChange = date => {\r\n    setDate(date);\r\n    console.log(date);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\r\n        baseUrl + '/weights',\r\n        {\r\n          weight: weightToAdd,\r\n          date: date\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: 'bearer ' + token\r\n          }\r\n        }\r\n      )\r\n      .then(function(res) {\r\n        console.log(res);\r\n        addWeight(res.data);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Calendar onChange={onChange} value={date}></Calendar>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField onChange={handleWeightToAdd} value={weightToAdd}></TextField>\r\n\r\n        <FloatingActionButtonContainer>\r\n          <StyledFloatingActionButton\r\n            variant=\"extended\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Save Weight\r\n          </StyledFloatingActionButton>\r\n        </FloatingActionButtonContainer>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","//Display all weights\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { baseUrl } from '../../../api/baseURL';\r\nimport { Weight } from './Weight';\r\nimport { Chart } from './LineChart';\r\nimport { Progress } from './Progress';\r\nimport {\r\n  StyledFloatingActionButton,\r\n  FloatingActionButtonContainer\r\n} from '../../Styled/FloatingActionButton';\r\nimport { AddWeight } from './AddWeight';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3)\r\n  }\r\n}));\r\n\r\nexport const Weights = ({ token, userDetails }) => {\r\n  const [currentWeight, setCurrentWeight] = useState(0);\r\n  const [weights, setWeights] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function fetchWeights() {\r\n    console.log(token);\r\n    axios\r\n      .get(baseUrl + '/weights', {\r\n        headers: {\r\n          Authorization: 'bearer ' + token\r\n        }\r\n      })\r\n      .then(function(res) {\r\n        console.log(res);\r\n        setWeights(weights.concat(res.data));\r\n\r\n        setCurrentWeight(res.data[res.data.length - 1].weight_value);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const addWeight = weight => {\r\n    setWeights(weights.concat(weight));\r\n  };\r\n\r\n  const deleteWeight = id => {\r\n    setWeights(weights.filter(weight => weight.id !== id));\r\n    console.log(weights);\r\n  };\r\n\r\n  const editWeight = (id, weight) => {\r\n    setWeights(\r\n      weights.map(weight => {\r\n        if (weight.id !== id) return weight;\r\n        return { ...weight, weight_value: weight };\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWeights();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Chart weights={weights} currentWeight={currentWeight} />\r\n\r\n      <Progress userDetails={userDetails} currentWeight={currentWeight} />\r\n\r\n      <List>\r\n        {weights.map(weight => (\r\n          <Weight weight={weight} token={token} />\r\n        ))}\r\n      </List>\r\n\r\n      <FloatingActionButtonContainer>\r\n        <StyledFloatingActionButton\r\n          onClick={handleOpen}\r\n          variant=\"extended\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n        >\r\n          New Weight\r\n        </StyledFloatingActionButton>\r\n      </FloatingActionButtonContainer>\r\n\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <AddWeight token={token} addWeight={addWeight} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { RegisterForm } from './components/Forms/RegisterForm';\nimport { LoginForm } from './components/Forms/LoginForm';\nimport { Weights } from './components/Dashboard/Weights/Weights';\nimport { AddWeight } from './components/Dashboard/Weights/AddWeight';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [userDetails, setUserDetails] = useState({});\n\n  const handleToken = tokenRecieved => {\n    setToken(tokenRecieved);\n  };\n\n  return (\n    <Router basename=\"/Weight-Tracker/\">\n      <Container maxWidth=\"sm\">\n        <Switch>\n          <Route path=\"/register\" render={() => <RegisterForm />} />\n\n          <Route\n            path=\"/login\"\n            render={() => (\n              <LoginForm\n                setUserDetails={setUserDetails}\n                handleToken={handleToken}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/weights\"\n            render={() => <Weights userDetails={userDetails} token={token} />}\n          />\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}